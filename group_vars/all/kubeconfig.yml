kube_config:
  cluster_name: "{{ cluster_name }}"
  contexts:
    - name: kubernetes-admin
      context: kubernetes-admin@kubernetes
      ca: "{{ k8s_pki_dir }}/{%- if certs_way == 'cfssl'-%}ca.pem{% else %}ca.crt{%- endif -%}"
      cert: "{{ k8s_pki_dir }}/{%- if certs_way == 'cfssl'-%}admin.pem{% else %}admin.crt{%- endif -%}"
      cert_key: "{{ k8s_pki_dir }}/{%- if certs_way == 'cfssl'-%}admin-key.pem{% else %}admin.key{%- endif -%}"
      path: "{{ kubernetes_etc_dir }}/admin.conf"
    - name: system:kube-controller-manager
      context: system:kube-controller-manager@kubernetes
      ca: "{{ k8s_pki_dir }}/{%- if certs_way == 'cfssl'-%}ca.pem{% else %}ca.crt{%- endif -%}"
      cert: "{{ k8s_pki_dir }}/{%- if certs_way == 'cfssl'-%}controller-manager.pem{% else %}controller-manager.crt{%- endif -%}"
      cert_key: "{{ k8s_pki_dir }}/{%- if certs_way == 'cfssl'-%}controller-manager-key.pem{% else %}controller-manager.key{%- endif -%}"
      path: "{{ kubernetes_etc_dir }}/controller-manager.conf"
    - name: system:kube-scheduler
      context: system:kube-scheduler@kubernetes
      ca: "{{ k8s_pki_dir }}/{%- if certs_way == 'cfssl'-%}ca.pem{% else %}ca.crt{%- endif -%}"
      cert: "{{ k8s_pki_dir }}/{%- if certs_way == 'cfssl'-%}scheduler.pem{% else %}scheduler.crt{%- endif -%}"
      cert_key: "{{ k8s_pki_dir }}/{%- if certs_way == 'cfssl'-%}scheduler-key.pem{% else %}scheduler.key{%- endif -%}"
      path: "{{ kubernetes_etc_dir }}/scheduler.conf"
    - name: system:bootstrappers:default-node-token
      context: system:bootstrappers:default-node-token@kubernetes
      ca: "{{ k8s_pki_dir }}/{%- if certs_way == 'cfssl'-%}ca.pem{% else %}ca.crt{%- endif -%}"
      token: "{{ bootstrap_token }}"
      path: "{{ kubernetes_etc_dir }}/bootstrap-kubelet.conf"
    # - name: "{% if hostvars[inventory_hostname]['ansible_host'] is defined %}system:node:{{ hostvars[inventory_hostname].ansible_hostname }}{% else %}system:node:{{ hostvars[inventory_hostname]['ansible_' + iface].ipv4.address }}{% endif %}"
    #   context: "{% if hostvars[inventory_hostname]['ansible_host'] is defined %}system:node:{{ hostvars[inventory_hostname].ansible_hostname }}@kubernetes{% else %}system:node:{{ hostvars[inventory_hostname]['ansible_' + iface].ipv4.address }}@kubernetes{% endif %}"
    #   ca: "{{ k8s_pki_dir }}/{%- if certs_way == 'cfssl'-%}ca.pem{% else %}ca.crt{%- endif -%}"
    #   cert: "{{ k8s_pki_dir }}/{%- if certs_way == 'cfssl'-%}kubelet.pem{% else %}kubelet.crt{%- endif -%}"
    #   cert_key: "{{ k8s_pki_dir }}/{%- if certs_way == 'cfssl'-%}kubelet-key.pem{% else %}kubelet.key{%- endif -%}"
    #   path: "{{ kubernetes_etc_dir }}/kubelet.conf"
    # - name: "kube-proxy"
    #   context: "system:kube-proxy@kubernetes"
    #   ca: "{{ k8s_pki_dir }}/{%- if certs_way == 'cfssl'-%}ca.pem{% else %}ca.crt{%- endif -%}"
    #   cert: "{{ k8s_pki_dir }}/{%- if certs_way == 'cfssl'-%}kube-proxy.pem{% else %}kube-proxy.crt{%- endif -%}"
    #   cert_key: "{{ k8s_pki_dir }}/{%- if certs_way == 'cfssl'-%}kube-proxy-key.pem{% else %}kube-proxy.key{%- endif -%}"
    #   path: "{{ kube_proxy_data_dir }}/kubeconfig.conf"
