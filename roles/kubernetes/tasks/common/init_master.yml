- block:
  - name: 创建 master 节点各组件所需目录
    file:
      path: "{{ item }}"
      state: directory
      mode: 0644
    with_items:
    - "{{ kubernetes_etc_dir }}/audit"
    - "{{ kubernetes_log_dir }}/audit"
    - "{{ kubernetes_log_dir }}/kube-apiserver"
    - "{{ kubernetes_log_dir }}/kube-controller-manager"
    - "{{ kubernetes_log_dir }}/kube-scheduler"

  - name: 生成 encryption config
    include_tasks: common/encryption_config_secret.yml

  - name: 获取 encryption config secret
    shell: >
      cat "{{ kubernetes_etc_dir }}/encryption_config_secret.yml" | grep encryption_config_secret | cut -d ":" -f 2 | sed 's/^[ \t]*//g'
    register: get_encryption_config_secret
    delegate_to: "{{ groups['kube_masters'][0] }}"

  - name: 设置 encryption_config_secret 变量
    set_fact:
      encryption_config_secret: "{{ get_encryption_config_secret.stdout }}"

  - name: master 节点渲染相关配置文件
    template:
      src: "{{ item.src }}.j2"
      dest: "{{ item.dest }}"
      owner: "root"
      group: "root"
      mode: "0644"
    with_items:
      #  EncryptionConfig 密钥注意不能修改，也就是不要重复生成。https://github.com/kubernetes/kubernetes/issues/66844
      - { src: "encryption/config.yaml", dest: "{{ k8s_pki_dir }}/secrets-encryption.yaml" }
      - { src: "audit/policy.yaml", dest: "{{ kubernetes_etc_dir }}/audit/policy.yaml" }

  - name: 加载 master 节点各组件镜像
    when: install_way != 'binary'
    shell: >
      {% if container_runtime == 'docker' -%}
        docker load -i {{ cache_dir }}/images/master.tar.gz
      {% elif container_runtime == 'containerd' -%}
        ctr -n=k8s.io images import {{ cache_dir }}/images/master.tar.gz
      {%- endif -%}
  when: "inventory_hostname in (groups['kube_masters'] | difference(groups['delete_masters']))"
