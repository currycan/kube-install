- name: 获取其他 worker 节点各组件状态
  when:
    - inventory_hostname not in (groups['kube_masters'] | difference(groups['delete_masters']) | unique)
    - inventory_hostname in (groups['kube_nodes'] | difference(groups['delete_nodes']) | unique)
  shell: >
    kubectl get nodes | grep {{ hostvars[inventory_hostname]['ansible_' + iface].ipv4.address }} | wc -l || exit 0
  environment:
    KUBECONFIG: "{{ kubernetes_etc_dir }}/admin.conf"
  register: get_nodes_result
  delegate_to: "{{ groups['kube_masters'] | difference(groups['delete_masters']) | unique | first }}"

# # 由于 etcd 是二进制安装，因此需要加上配置： --config kubeadm-config.yaml
- name: 创建 worker 节点 join token
  shell: >
    echo $(kubeadm token create --print-join-command --ttl=15m) --certificate-key $(kubeadm init phase upload-certs --upload-certs --config {{ kubernetes_etc_dir }}/kubeadm-config.yaml | sed -n '3p')
  environment:
    KUBECONFIG: "{{ kubernetes_etc_dir }}/admin.conf"
  run_once: true
  delegate_to: "{{ groups['kube_masters'] | difference(groups['delete_masters']) | unique | first }}"
  register: worker_kubeadm_join_cmd

- name: 生成 kubeadm join 命令
  set_fact:
    kubeadm_join: "{{ worker_kubeadm_join_cmd.stdout }}"

- block:
  - block:
    # - pause:
    #     prompt: "暂停，手动确认继续执行，测试用。。。"

    # - debug: msg="worker 节点加入集群，可能需要一定时间。。"
    # - name: worker 节点加入集群
    #   shell: >
    #     timeout -k 240s 240s;
    #     systemctl stop kubelet.service;
    #     rm -f {{ kubelet_data_dir }}/cpu_manager_state;
    #     rm -f {{ kubelet_data_dir }}/memory_manager_state;
    #     kubeadm join --config {{ kubernetes_etc_dir }}/kubeadm-config.yaml --v=5
    #   register: worker_join_rslt
    #   ignore_errors: true

    - debug: var=kubeadm_join
    - debug: msg="worker 节点加入集群，可能需要一定时间。。"
    - name: worker 节点加入集群
      shell: >
        timeout -k 240s 240s;
        {{ kubeadm_join }} \
          --node-name={{ hostvars[inventory_hostname]['ansible_' + iface].ipv4.address }} \
          --ignore-preflight-errors=all \
          --v=5
      register: worker_join_rslt
      ignore_errors: true

    - name: 获取 worker 节点 kubeadm join 输出结果
      action: copy content="{{ worker_join_rslt.stdout }}" dest="{{ kubernetes_etc_dir }}/worker_kubeadm_join_rslt.stdout"

    - name: 校验 worker 节点加入集群是否成功
      assert:
        that: worker_join_rslt is succeeded
        msg: "节点：{{ inventory_hostname }} kubeadm join 失败"
    when: 'get_nodes_result.stdout != "1"'
  when:
    - inventory_hostname not in (groups['kube_masters'] | difference(groups['delete_masters']) | unique)
    - inventory_hostname in (groups['kube_nodes'] | difference(groups['delete_nodes']) | unique)
