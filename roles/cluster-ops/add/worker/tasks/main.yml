- name: 校验新增 node 节点数量
  run_once: true
  assert:
    that: (groups['add_nodes'] | difference(groups['delete_nodes']) | unique)|length > 0
    msg: " 未配置新增 node 节点，或者新增节点在 delete_nodes 组内!"

- block:
  - name: 创建目录
    file:
      path: "{{ item }}"
      state: directory
      mode: 0644
    with_items:
      - "{{ k8s_pki_dir }}"
      - "{{ manifest_dir }}"

  - name: 获取 kubernetes ca 证书和 bootstrap-kubelet.conf
    slurp:
      src: "{{ item }}"
    with_items:
      - "{{ kubernetes_ca }}"
      - "{{ kubernetes_etc_dir }}/bootstrap-kubelet.conf"
    register: slurp_kubernetes_ca_cert
    run_once: true
    delegate_to: "{{ (groups['kube_masters'] | difference(groups['delete_masters']) | unique | first) }}"

  - name: 分发 kubernetes ca 证书和 bootstrap-kubelet.conf 到新增 worker 节点
    copy:
      dest: "{{ item.source }}"
      content: "{{ item.content | b64decode }}"
      owner: root
      group: root
      mode: 0644
    no_log: true
    with_items: "{{ slurp_kubernetes_ca_cert.results }}"
  when: startup != 'kubeadm'

- block:
  - name: 获取 bootstrap_token
    shell: >
      cat "{{ k8s_pki_dir }}/token.csv" | grep kubelet-bootstrap | cut -d',' -f1
    register: get_bootstrap_token

  - name: 设置 bootstrap_token 变量
    set_fact:
      bootstrap_token: "{{ get_bootstrap_token.stdout }}"

  - block:
    - name: 获取 bootstrap token
      changed_when: true
      command: >-
        kubeadm token list
      register: list_kubeadm_token

    - name: 创建 kubeadm join token
      when: bootstrap_token not in list_kubeadm_token.stdout
      changed_when: true
      command: >-
        kubeadm token create {{ bootstrap_token }}
    when:
      - add_nodes_task is defined
      - add_nodes_task | bool
  run_once: true
  delegate_to: "{{ groups['kube_masters'] | difference(groups['delete_masters']) | unique | first }}"
